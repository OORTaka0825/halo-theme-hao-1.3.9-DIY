/*! snowflake.min.js — RAF + 单例/自检（含 light/dark 模式判断 & 更大雪花默认值） */
(function(){
  var G = window.__SNOWFALL__ || (window.__SNOWFALL__={
    canvas:null,ctx:null,flakes:[],raf:0,running:false,last:0,bound:false
  });

  // 可调参数：想更接近原版，可适当再加大 rMax / vyMax / baseCountDesktop
  var CFG = {
    rMin: 2.0, rMax: 5.0,        // 雪花半径（px）
    vyMin: 45, vyMax: 95,        // 垂直速度（px/s）
    vxAbs: 22,                   // 水平基础速度上限（±）
    swayAmp: 1.8,                // 左右摆幅（越大越摇）
    windAmp: 14,                 // 风影响（越大越晃）
    baseCountDesktop: 110,       // 桌面基础数量
    baseCountMobile:  55,        // 移动端基础数量
    densityMax: 1.7, densityMin: 0.7, // 宽度密度系数范围
    nightBoost: 1.10,            // 夜间密度提升
    opacity: 0.95                // 全局不透明度
  };

  function norm(m){ if(!m||m==="none")return ""; if(m==="light")return "day"; if(m==="dark")return "night"; return m; }
  function isDark(){
    var html=document.documentElement;
    if (html.getAttribute('data-theme')==='dark') return true;
    if (html.classList && html.classList.contains('night')) return true;
    if (typeof window.specialEfficacyScheme==='string' && window.specialEfficacyScheme==='dark') return true;
    return false;
  }
  function modeWanted(){
    var cfg=(window.DreamConfig&&window.DreamConfig.effects_snowflake_mode)||"";
    var mode=norm(cfg);
    if(!mode) return false;           // 未配置就不显示
    if(mode==="all") return true;
    if(mode==="day") return !isDark();
    if(mode==="night")return isDark();
    return false;
  }

  function ensureCanvas(){
    if(G.canvas && document.body.contains(G.canvas)) return;
    var c=document.getElementById("snowfall");
    if(!c){
      c=document.createElement("canvas");
      c.id="snowfall";
      c.className="canvas_effects snowfall";
      c.setAttribute("aria-hidden","true");
      c.style.cssText="position:fixed;left:0;top:0;width:100vw;height:100vh;pointer-events:none;background:transparent;z-index:1;";
      document.body.appendChild(c);
    }
    G.canvas=c; G.ctx=c.getContext("2d",{alpha:true}); resize();
  }
  function destroy(){
    if(G.raf){ cancelAnimationFrame(G.raf); G.raf=0; }
    G.running=false; G.last=0; G.flakes.length=0; G.ctx=null;
    if(G.canvas){ try{ G.canvas.remove(); }catch(e){} G.canvas=null; }
  }
  function resize(){
    if(!G.canvas) return;
    var dpr=window.devicePixelRatio||1;
    var w=Math.max(document.documentElement.clientWidth, window.innerWidth||0);
    var h=Math.max(document.documentElement.clientHeight,window.innerHeight||0);
    G.canvas.width=Math.floor(w*dpr);
    G.canvas.height=Math.floor(h*dpr);
    G.canvas.style.width=w+"px";
    G.canvas.style.height=h+"px";
    if(G.ctx) G.ctx.setTransform(dpr,0,0,dpr,0,0);
  }
  function R(a,b){ return a+Math.random()*(b-a); }
  function makeFlake(randomY){
    var dpr=window.devicePixelRatio||1, w=(G.canvas?G.canvas.width/dpr:window.innerWidth), h=(G.canvas?G.canvas.height/dpr:window.innerHeight);
    var r = R(CFG.rMin, CFG.rMax);
    var vx= R(-CFG.vxAbs, CFG.vxAbs);
    var vy= R(CFG.vyMin, CFG.vyMax);
    return {x:Math.random()*w, y:randomY?Math.random()*h:-10-Math.random()*40, r:r, vx:vx, vy:vy, sway:R(0.5, CFG.swayAmp), ph:Math.random()*Math.PI*2};
  }
  function initFlakes(){
    var dpr=window.devicePixelRatio||1, w=(G.canvas?G.canvas.width/dpr:window.innerWidth);
    var base=/Mobi|Android|iPhone|iPad|iPod/i.test(navigator.userAgent)?CFG.baseCountMobile:CFG.baseCountDesktop;
    var density = Math.min(CFG.densityMax, Math.max(CFG.densityMin, w/1440));
    if (isDark()) density *= CFG.nightBoost; // 夜间稍微多一点
    var count=Math.round(base * density);
    G.flakes.length=0;
    for(var i=0;i<count;i++) G.flakes.push(makeFlake(true));
  }
  function tick(ts){
    if(!G.running) return;
    if(!G.last) G.last=ts;
    var dt=Math.min(0.033,(ts-G.last)/1000); // 秒；封顶 33ms
    G.last=ts;
    var ctx=G.ctx; if(!ctx) return;
    var dpr=window.devicePixelRatio||1, w=(G.canvas?G.canvas.width/dpr:window.innerWidth), h=(G.canvas?G.canvas.height/dpr:window.innerHeight);
    ctx.clearRect(0,0,w,h);
    for(var i=0;i<G.flakes.length;i++){
      var f=G.flakes[i];
      f.ph += f.sway*dt;
      var wind = Math.sin(f.ph) * CFG.windAmp; // 风
      f.x += (f.vx + wind) * dt;
      f.y += f.vy * dt;
      if(f.y-f.r>h+4 || f.x<-20 || f.x>w+20) G.flakes[i] = makeFlake(false);
      ctx.globalAlpha = CFG.opacity;
      ctx.fillStyle   = "#FFF";
      ctx.beginPath(); ctx.arc(f.x,f.y,f.r,0,Math.PI*2); ctx.fill();
    }
    G.raf=requestAnimationFrame(tick);
  }

  function start(){
    if(G.running){
      if(!G.canvas || !document.body.contains(G.canvas)){ destroy(); }
      else { resize(); return; }
    }
    ensureCanvas(); initFlakes();
    if(!G.bound){
      G.bound=true;
      window.addEventListener("resize", function(){ resize(); initFlakes(); }, {passive:true});
      document.addEventListener("visibilitychange", function(){
        if(document.hidden){ if(G.raf){cancelAnimationFrame(G.raf); G.raf=0;} G.last=0; }
        else if(G.running){ G.last=0; G.raf=requestAnimationFrame(tick); }
      }, {passive:true});
      // 主题切换/路由完成时，同步（依赖 loader 触发 hao:mode-change；没有也不影响，我们再做一次兜底 ensure）
      window.addEventListener("hao:mode-change", ensure, {passive:true});
      window.addEventListener("pjax:complete",   ensure, {passive:true});
    }
    G.running=true; G.last=0; G.raf=requestAnimationFrame(tick);
  }
  function stop(){ if(!G.running && !G.canvas) return; destroy(); }

  function ensure(){
    // 根据配置/当前明暗决定是否显示
    if (modeWanted()) start();
    else stop();
  }

  // 初始多次尝试，确保等到 DreamConfig 准备就绪（有些主题先加载 snow，再写 DreamConfig）
  ensure();
  setTimeout(ensure, 0);
  setTimeout(ensure, 120);
  setTimeout(ensure, 500);
  setTimeout(ensure, 1200);

  // 暴露调试接口（可选）
  window.SnowflakeEffect = { start:start, stop:stop, ensure:ensure, _cfg:CFG };
})();
